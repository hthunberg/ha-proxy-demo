global
    #log 127.0.0.1 local2
    #log stdout format raw local2
    log stdout  format raw  local0  info
    maxconn 2000
    daemon
    user    haproxy
    group   haproxy
    nbproc 2
    cpu-map 1 0
    cpu-map 2 1
    stats bind-process 1
    log-send-hostname {{ inventory_hostname }}
    tune.maxrewrite 26214400
    tune.bufsize 52428800
 
defaults
    log global
    mode http
    option  redispatch
    #option httplog
    option dontlognull
    log-format {"type":"haproxy","timestamp":%Ts,"http_status":%ST,"http_request":"%r","remote_addr":"%ci","bytes_read":%B,"upstream_addr":"%si","backend_name":"%b","retries":%rc,"bytes_uploaded":%U,"upstream_response_time":"%Tr","upstream_connect_time":"%Tc","session_duration":"%Tt","termination_state":"%ts"}
    retries 3
    timeout connect 5000
    timeout client 50000
    timeout server 50000
    timeout check 5000
    timeout queue 5000
 
frontend http-in
    bind *:8888
    mode http
    option http-server-close
    option forwardfor
    http-response add-header ReverseDebug fail
    default_backend webservers
    log 127.0.0.1 daemon emerg debug

    acl ACL_MATCH_GET_REQUEST method GET
    #acl ACL_MATCH_DEMO_RESOURCE path_beg /demo

    #use_backend demo_resource if ACL_MATCH_DEMO_RESOURCE
    use_backend webservers if ACL_MATCH_GET_REQUEST
 
backend webservers
    mode http
    #acl demo_allowed_ip src -m ip -f /etc/haproxy/demo_acl.lst
    #http-request deny unless demo_allowed_ip
    #option httpchk
    stats enable
    stats auth admin:admin
    stats uri /haproxy?stats
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    option forwardfor
    option http-server-close
    server apache1 host.docker.internal:8090 check
    server apache2 host.docker.internal:8091 check
    server apacheErrror host.docker.internal:8092 check